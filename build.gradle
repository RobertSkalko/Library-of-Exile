buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven { url 'https://maven.terraformersmc.com/releases' }
    maven { url "https://maven.shedaniel.me/" }
}

minecraft {


    mappings channel: 'official', version: "$project.minecraft_version"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {

            workingDirectory project.file('run')

            arg "-mixin.config=library_of_exile-mixins.json"

            mods {
                library_of_exile {
                    source sourceSets.main
                }
            }
        }

        server {

            workingDirectory project.file('run')

            arg "-mixin.config=library_of_exile-mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=library_of_exile-mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {


    minecraft([
            group  : "net.minecraftforge",
            name   : 'forge',
            version: "$project.minecraft_version-${project.forgeversion}"
    ])

    //compileOnly("org.spongepowered:mixin:0.8.2") {
    //   transitive = false
    // }

    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}


// CURSEFORGE STUFF


jar {
    manifest {
        attributes([
                "MixinConnector": "com.robertx22.library_of_exile.main.MixinConnector",
                "MixinConfigs"  : "library_of_exile-mixins.json"
        ])
    }
}

/*
jar {
    manifest {
        attributes([
                "MixinConnector"          : "com.robertx22.library_of_exile.main.MixinConnector",
                "MixinConfigs"            : "library_of_exile-mixins.json",
                "Specification-Title"     : "library_of_exile",
                "Specification-Vendor"    : "Exiled",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "1.0.0",
                "Implementation-Vendor"   : "Exiled",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

 */
curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'text'
        changelog = file('CHANGELOG.txt')
        addGameVersion("${project.minecraft_version}")
        addGameVersion("Fabric")
        addGameVersion("Java 8")

        relations {
            //  requiredDependency 'fabric-api'
        }
        mainArtifact(jar)

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }
    options {
        forgeGradleIntegration = true
    }
}

apply plugin: 'org.spongepowered.mixin'
mixin {
    add sourceSets.main, "library_of_exile-refmap.json"
}